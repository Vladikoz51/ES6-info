// Поведение ключевого слова this зависит от контекста, в котором оно используется, и от того, в каком режиме оно
// используется - строгом или нестрогом.
// В глобальном контексте this ссылается на глобальный объект. Что такое "глобальный объект" в JavaScript? Это зависит
// от среды, в которой выполняется код. Так, в веб-браузере this представляет объект window - объект, который
// представляет окно браузера. В среде Node.js this представляет объект global. А для веб-воркеров this представляет
// объект self.
console.log(this);
// В стандарт ES2020 было добавлено определение объекта globalThis, который позволяет ссылаться на глобальный контекст
// вне зависимости, в какой среде и в какой ситуации выполняется код:
console.log(globalThis);


// Контекст функции
// В пределах функции this ссылается на внешний контекст. Для функций, определенных в глобальном контексте, - это объект
// globalThis. Например:
function foo() {
  var bar = "bar1";
  console.log(this.bar);
}
var bar = "bar1";
foo();  // bar1 (при использовании let и const вместо var выводит undefined)
// Если бы мы не использовали бы this, то обращение шло бы к локальной переменной, определенной внутри функции.


// В контексте объекта, в том числе в его методах, ключевое слово this ссылается на тот же объект:
let user = {
  name: "Vladimir",
  display: function() {
    console.log(this.name);
  }
}
let name = "Mikhail";
user.display();    // Vladimir