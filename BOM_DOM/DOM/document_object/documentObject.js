// Для работы со структурой DOM в JavaScript предназначен объект document, который определен в глобальном объекте window.
// Объект document предоставляет ряд свойств и методов для управления элементами страницы.


//------------------------------------------------Поиск элементов-------------------------------------------------------
// Для поиска элементов на странице применяются следующие методы:

// getElementById(value): выбирает элемент, у которого атрибут id равен value, если элемента с таким идентификатором
// нет, то возвращается null.
// getElementsByTagName(value): выбирает все элементы, у которых тег равен value
// getElementsByClassName(value): выбирает все элементы, которые имеют класс value
// querySelector(value): выбирает первый элемент, который соответствует css-селектору value
// querySelectorAll(value): выбирает все элементы, которые соответствуют css-селектору value

// С помощью вызова document.getElementById("header") находим элемент, у которого id="header". А с помощью свойства
// innerText можно получить текст найденного элемента.

// С помощью вызова document.getElementsByTagName("p") находим все элементы параграфов. Этот вызов возвращает массив
// найденных элементов. Поэтому, чтобы получить отдельные элементы массива, необходимо пробежаться по ним в цикле.

// Если нам надо получить только первый элемент, то можно к первому элементу найденной коллекции объектов:
let pElement = document.getElementsByTagName("p")[0];
document.write("Текст параграфа: " + pElement.innerText);

// Получение элемента по классу:
let textElems = document.getElementsByClassName("text");
for (let i = 0; i < textElems.length; i++) {
  console.log(textElems[i]);
}

// Выбор по селектору css:
let elem = document.querySelector(".annotation p");
document.write("<br>Текст селектора: " + elem.innerText);
// Выражение document.querySelector(".annotation p") находит элемент, который соответствует селектору .annotation p.
// Если на странице несколько элементов, соответствующих селектору, то метод выберет первый из них.

// Чтобы получить все элементы по селектору, можно подобным образом использовать метод document.querySelectorAll,
// который возвращает массив найденных элементов:
let elems = document.querySelectorAll(".text");
for (let i = 0; i < elems.length; i++) {
  document.write("<br>Текст селектора " + i + ": " + elems[i].innerText);
}


//--------------------------------------------Свойства объекта document-------------------------------------------------
// Кроме ранее рассмотренных методов объект document позволяет обратиться к определенным элементам веб-страницы через
// свойства:
// documentElement: предоставляет доступ к корневому элементу <html>
// body: предоставляет доступ к элементу <body> на веб-странице
// images: содержит коллекцию всех объектов изображений (элементов img)
// links: содержит коллекцию ссылок - элементов <a> и <area>, у которых определен атрибут href
// anchors: предоставляет доступ к коллекции элементов <a>, у которых определен атрибут name
// forms: содержит коллекцию всех форм на веб-странице

// Эти свойства не предоставляют доступ ко всем элементам, однако позволяют получить наиболее часто используемые
// элементы на веб-странице. Например, получим корневой узел документа:
let container = document.documentElement;
let images = document.images;
// изменим первое изображение
images[0].src="pics/picture_4.jpg";
images[0].alt="Новая картинка";
// переберем все изображения
for (let i=0; i < images.length; i++) {
  document.write("<br/>" + images[i].src);
  document.write("<br/>" + images[i].alt);
}

let links = document.links;
for (let i = 0; i < links.length; i++) {
  document.write("<br/>" + links[i].innerText);
  document.write("<br/>" + links[i].href);
}