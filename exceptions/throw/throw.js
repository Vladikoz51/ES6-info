// Интерпретатор JavaScript генерирует ошибки для ряда ситуаций, например, при вызове несуществующей функции, при
// повторном присвоении константе значения и т.д. Но при необходимости мы сами можем генерировать ошибки и определить
// условия, когда будет генерироваться ошибка.
// Например, рассмотрим следующую ситуацию:
class Person {
  constructor(name, age){
    this.name = name;
    this.age = age;
  }
  print() {console.log(`Name: ${this.name} Age: ${this.age}`);}
}
let tom = new Person("Tom", -123);
tom.print();    // Name: Tom  Age: -123
// Класс Person описывает человека. В конструкторе класс получает значения для свойств name (имя) и age (возраст).
// Исходя из здравого смысла мы понимаем, что возраст не может быть отрицательным. Тем не менее пока, исходя из логики
// класса, ничего не мешает при создании объекта Person передать ему для возраста отрицательное значение. С точки зрения
// интерпретатора JavaScript ошибки нет, однако с точки логики и здравого смысла - это ошибка. Как исправить эту
// ситуацию? Есть различные способы, и один из них заключается в генерации исключения.
// Для генерации исключения применяется оператор throw, после которого указывается информация об ошибке:
//
// throw информация_об_ошибке;
// Так, сгенерируем исключение при передаче в конструктор Person отрицательного значения для свойства age:
class Person2{
  constructor(name, age) {
    if (age < 0) throw "Возраст должен быть положительным";
    this.name = name;
    this.age = age;
  }
  print() { console.log(`Name: ${this.name} Age: ${this.age}`);}
}
// tom = new Person2("Tom", -123);    // Uncaught Возраст должен быть положительным
// tom.print();
// В итоге при вызове конструктора Person будет сгенерировано исключение и программа завершится ошибкой. А на консоли
// браузера мы увидим информацию об ошибке, которая указана после оператора throw:
// Uncaught Возраст должен быть положительным
// Как и в общем случае мы можем обработать эту ошибку с помощью блока try...catch:
try {
  tom = new Person2("Tom", -123);    // Uncaught Возраст должен быть положительным
  tom.print();
}
catch (error) {
  console.log("Произошла ошибка");
  console.log(error);     // Возраст должен быть положительным
}


// Оператор throw может вызываться в различных контекстах, например, в том же блоке try:
// try{
//     throw "Непредвиденная ошибка!";
// }
// catch(error){
//     console.log(error); // Непредвиденная ошибка!
// }
